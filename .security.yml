# Radio Calico Security Configuration
# This file defines security policies and configurations for the application

# NPM Audit Configuration
audit:
  level: "moderate"  # Audit level: low, moderate, high, critical
  production-only: false
  dev-dependencies: true
  
  # Advisories to ignore (temporary exceptions)
  ignore:
    # Example: - 1002345  # Ignore specific advisory ID
    # Add advisory IDs here that are temporarily acceptable
    
  # Auto-fix settings
  auto-fix:
    enabled: true
    force: false  # Set to true only if you understand the risks
    
# Dependency Management
dependencies:
  # Check for outdated packages
  outdated-check: true
  
  # Maximum age for dependencies (in days)
  max-age: 365
  
  # Critical packages that should always be up to date
  critical-packages:
    - "express"
    - "bcrypt"
    - "jsonwebtoken"
    - "pg"
    - "winston"
    
  # Packages to monitor closely
  watch-packages:
    - "cors"
    - "body-parser"
    - "express-session"

# Docker Security
docker:
  # Base image security
  base-images:
    - "node:18-alpine"
    - "postgres:15-alpine"
    - "nginx:alpine"
    
  # Scan settings
  vulnerability-scan: true
  scan-tool: "trivy"  # Options: trivy, snyk, clair
  
  # Container security settings
  security:
    run-as-non-root: true
    read-only-filesystem: false
    no-new-privileges: true

# Environment Security
environment:
  # Required environment variables
  required-vars:
    - "JWT_SECRET"
    - "DB_HOST"
    - "DB_USER"
    - "DB_PASSWORD"
    - "DB_NAME"
    
  # Variables that should never contain default values
  no-defaults:
    - "JWT_SECRET"
    - "DB_PASSWORD"
    
  # File permissions
  file-permissions:
    "server.js": "644"
    "package.json": "644"
    ".env": "600"
    "scripts/*.sh": "755"

# Code Security
code:
  # Patterns to scan for (potential security issues)
  scan-patterns:
    - "password.*=.*['\"][^'\"]*['\"]"
    - "secret.*=.*['\"][^'\"]*['\"]"
    - "api[_-]?key.*=.*['\"][^'\"]*['\"]"
    - "token.*=.*['\"][^'\"]*['\"]"
    - "eval\\s*\\("
    - "innerHTML\\s*="
    
  # Excluded patterns (known safe instances)
  exclude-patterns:
    - "test.*secret"
    - "example"
    - "placeholder"
    - "process\\.env"
    - "JWT_SECRET.*process.env"
    
  # Files to exclude from scanning
  exclude-files:
    - "node_modules/**"
    - ".git/**"
    - "*.log"
    - "coverage/**"
    - "*.test.js"
    - "security-reports/**"

# Network Security
network:
  # Allowed origins for CORS
  cors-origins:
    - "http://localhost:3000"
    - "http://localhost:80"
    
  # Security headers
  security-headers:
    - "X-Content-Type-Options: nosniff"
    - "X-Frame-Options: DENY"
    - "X-XSS-Protection: 1; mode=block"
    - "Strict-Transport-Security: max-age=31536000"
    
  # Rate limiting
  rate-limit:
    enabled: true
    window: "15 minutes"
    max-requests: 100

# Logging Security
logging:
  # Log sensitive data filtering
  filter-sensitive: true
  
  # Fields to never log
  never-log:
    - "password"
    - "token"
    - "secret"
    - "key"
    - "authorization"
    
  # Audit trail requirements
  audit-trail:
    enabled: true
    events:
      - "user_login"
      - "user_registration"
      - "password_change"
      - "admin_actions"
      - "data_access"

# Incident Response
incident-response:
  # Contact information
  security-contact: "security@radiocalico.example.com"
  
  # Escalation procedures
  escalation:
    - level: "low"
      response-time: "7 days"
    - level: "moderate" 
      response-time: "3 days"
    - level: "high"
      response-time: "24 hours"
    - level: "critical"
      response-time: "4 hours"
      
# Compliance
compliance:
  # Standards to follow
  standards:
    - "OWASP Top 10"
    - "NIST Cybersecurity Framework"
    
  # Data protection
  data-protection:
    - "User password hashing"
    - "Secure session management"
    - "Input validation"
    - "SQL injection prevention"
    
# Monitoring
monitoring:
  # Security metrics to track
  metrics:
    - "failed_login_attempts"
    - "unusual_access_patterns"
    - "dependency_vulnerabilities"
    - "security_scan_results"
    
  # Alerting thresholds
  alerts:
    failed-logins: 5  # per minute
    vulnerability-score: 7.0  # CVSS score
    
# Reporting
reporting:
  # Report generation
  frequency: "weekly"
  format: "json"
  
  # Report recipients
  recipients:
    - "devops@radiocalico.example.com"
    - "security@radiocalico.example.com"
    
  # Report contents
  include:
    - "vulnerability_summary"
    - "outdated_dependencies"
    - "security_scan_results"
    - "compliance_status"
