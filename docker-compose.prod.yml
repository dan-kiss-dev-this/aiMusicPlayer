# Docker Compose for Radio Calico Production
version: '3.8'

services:
  radiocalico:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: radiocalico-prod
    ports:
      - "80:3000"
    volumes:
      - radiocalico-data:/app/data
      - radiocalico-logs:/app/logs
      - ./backups:/app/backups
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/database.db
      - LOG_LEVEL=info
      - PORT=3000
    networks:
      - radiocalico-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: radiocalico-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - radiocalico-logs:/var/log/nginx
    depends_on:
      - radiocalico
    networks:
      - radiocalico-network
    restart: always

  # Database backup service
  db-backup:
    image: alpine:latest
    container_name: radiocalico-db-backup-prod
    volumes:
      - radiocalico-data:/data
      - ./backups:/backups
    environment:
      - BACKUP_INTERVAL=21600  # Backup every 6 hours
    command: |
      sh -c '
        while true; do
          if [ -f /data/database.db ]; then
            timestamp=$$(date +%Y%m%d-%H%M%S)
            cp /data/database.db /backups/database-$$timestamp.db
            gzip /backups/database-$$timestamp.db
            # Keep only last 168 backups (1 week at 6h intervals)
            ls -t /backups/database-*.db.gz | tail -n +169 | xargs -r rm
          fi
          sleep $$BACKUP_INTERVAL
        done
      '
    networks:
      - radiocalico-network
    restart: always

  # Log rotation service
  logrotate:
    image: alpine:latest
    container_name: radiocalico-logrotate
    volumes:
      - radiocalico-logs:/logs
    command: |
      sh -c '
        while true; do
          find /logs -name "*.log" -size +100M -exec gzip {} \;
          find /logs -name "*.gz" -mtime +7 -delete
          sleep 86400  # Run daily
        done
      '
    restart: always

networks:
  radiocalico-network:
    driver: bridge

volumes:
  radiocalico-data:
    driver: local
  radiocalico-logs:
    driver: local
